{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red153\green168\blue186;\red32\green32\blue32;\red86\green132\blue173;
\red191\green100\blue38;\red152\green54\blue29;\red88\green118\blue71;}
{\*\expandedcolortbl;;\csgenericrgb\c60000\c65882\c72941;\csgenericrgb\c12549\c12549\c12549;\csgenericrgb\c33725\c51765\c67843;
\csgenericrgb\c74902\c39216\c14902;\csgenericrgb\c59608\c21176\c11373;\csgenericrgb\c34510\c46275\c27843;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs24 \cf2 \cb3 model = Sequential()\
model.add(Conv1D(\cf4 32\cf5 ,\cf4 3\cf5 , \cf6 input_shape \cf2 = x_train[\cf4 1\cf2 ].shape[\cf4 0\cf2 :\cf4 2\cf2 ]))\
model.add(LSTM(\cf4 128\cf5 , \cf6 activation\cf2 =\cf7 'relu'\cf2 ))\
model.add(Dense(\cf4 128\cf5 , \cf6 activation\cf2 =\cf7 'relu'\cf2 ))\
model.add(Dense(\cf4 1\cf5 , \cf6 activation\cf2 =\cf7 'linear'\cf2 ))\
\
\
optimizer = tf.keras.optimizers.RMSprop(\cf6 learning_rate\cf2 =\cf4 0.0005\cf5 , \cf6 rho\cf2 =\cf4 0.9\cf2 )\
\
model.compile(\cf6 optimizer\cf2 =optimizer\cf5 ,\
              \cf6 loss\cf2 =\cf7 'mae'\cf5 ,\
              \cf6 metrics\cf2 =[\cf7 'mae'\cf5 , \cf7 'mse'\cf5 , \cf2 rmse\cf5 , \cf2 pearson])\
\
\
\
model.fit(x_train\cf5 , \cf2 y_train\cf5 ,\
          \cf6 batch_size\cf2 =\cf4 16\cf5 ,\
          \cf6 validation_data\cf2 =(x_test\cf5 , \cf2 y_test)\cf5 ,\
          \cf6 epochs\cf2 =\cf4 50\cf5 ,\
          \cf6 verbose\cf2 =\cf4 1\cf2 )\
}